{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/chat/chat-box/chat-box.component.css","webpack:///./src/app/chat/chat-box/chat-box.component.html","webpack:///./src/app/chat/chat-box/chat-box.component.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/group-details/group-details.component.css","webpack:///./src/app/chat/group-details/group-details.component.html","webpack:///./src/app/chat/group-details/group-details.component.ts","webpack:///./src/app/chat/join-group/join-group.component.css","webpack:///./src/app/chat/join-group/join-group.component.html","webpack:///./src/app/chat/join-group/join-group.component.ts","webpack:///./src/app/shared/first-char/first-char.component.css","webpack:///./src/app/shared/first-char/first-char.component.html","webpack:///./src/app/shared/first-char/first-char.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/user-details/user-details.component.css","webpack:///./src/app/shared/user-details/user-details.component.html","webpack:///./src/app/shared/user-details/user-details.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { UserModule } from './user/user.module';\nimport { ChatModule } from './chat/chat.module';\n\n//for routing\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './user/login/login.component';\n\n//for Http service\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppService } from './app.service';\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    ChatModule,\n    UserModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '**', component: LoginComponent },\n      { path: \"*\", component: LoginComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n//for using cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n//Importing the required files for http services.\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n//import { Observable } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n/* import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\n */\n\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  private baseUrl = \"http://api.groupchatapp.hanumantpatil.co/api/v1/users\";\n\n  constructor(public _http: HttpClient) { }\n\n  public signUpFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobileNumber', data.mobileNumber)\n      .set('email', data.email)\n      .set('password', data.password);\n\n    return this._http.post(`${this.baseUrl}/signup`, params);\n  }//end of signUp function\n\n  public signInFunction(data): Observable<any> {\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n\n    return this._http.post(`${this.baseUrl}/login`, params);\n  }//end of signInFunction\n\n  public setUserInfoInLocalStorage = (data) => {\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }//end of setlocalstorage Function\n\n  public getUserInfoFromLocalStorage: any = () => {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  }//end getlocalstorage function\n\n  public logout(): Observable<any> {\n\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authToken'));\n\n    let userdetails = this.getUserInfoFromLocalStorage();\n\n    return this._http.post(`${this.baseUrl}/${userdetails.userId}/logout`, params);\n  }//end of logout function\n\n  public getChat(receiverid, skip): Observable<any> {\n\n    return this._http.get(`${this.baseUrl}/getGroupChat?chatRoomId=${receiverid}&skip=${skip}&authToken=${Cookie.get('authToken')}`)\n\n  }//end getChat function\n\n  public sendResetLinkFunction(email: string): Observable<any> {\n    return this._http.get(`${this.baseUrl}/${email}/forgotPassword`);\n  }//end sendResetLink function\n\n  public resetPassword(data: any): Observable<any> {\n    const params = new HttpParams()\n      .set('userId', data.userId)\n      .set('password', data.password);\n    return this._http.post(`${this.baseUrl}/resetPassword`, params);\n\n  }//end resetPassword Function\n\n  public createGroup(data: any): Observable<any> {\n    const params = new HttpParams()\n      .set('userEmail', data.email)\n      .set('roomName', data.grpname);\n\n    return this._http.post(`${this.baseUrl}/createChatRoom`, params);\n\n  }//end createGroup\n\n  public getGroups(): Observable<any> {\n\n    return this._http.get(`${this.baseUrl}/getChatRooms`);\n\n  }//end getGroups\n\n  public getGroup(data): Observable<any> {\n\n    return this._http.get(`${this.baseUrl}/${data}/getChatRoom`);\n\n  }//end getGroup\n\n  public joinGroup(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('userEmail', data.userEmail)\n      .set('chatRoomId', data.roomId);\n\n    return this._http.post(`${this.baseUrl}/joinChatRoom`, params);\n  }//end joinGroup\n\n  public sendInvite(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('userEmail', data.userEmail)\n      .set('chatRoomId', data.roomId);\n\n    return this._http.post(`${this.baseUrl}/sendInvite`, params);\n  }//end sendInvite\n\n  public editGroup(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('roomName', data.roomName);\n\n    return this._http.post(`${this.baseUrl}/${data.chatRoomId}/editChatRoom`, params);\n  }//end editGroup\n\n  public deleteGroup(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('chatRoomId', data);\n\n    return this._http.put(`${this.baseUrl}/deleteChatRoom`, params);\n  }//end deleteGroup\n\n  public closeGroup(data): Observable<any> {\n\n    return this._http.get(`${this.baseUrl}/${data}/closeGroup`);\n  }//end closeGroup\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }  // END handleError\n}\n","module.exports = \".online{\\r\\n\\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    background-color:green;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .offline{\\r\\n  \\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    background-color:red;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .font-green{\\r\\n    color: green;\\r\\n  }\\r\\n  \\r\\n  .rightSideClass {\\r\\n      float: right;\\r\\n      background: #ddd;\\r\\n      border-radius: 0.5em;\\r\\n    }\\r\\n  \\r\\n  .leftSideClass {\\r\\n      float: left;\\r\\n      background: #55C1E7;\\r\\n      border-radius: 0.5em;\\r\\n    }\\r\\n  \\r\\n  .circle-green:before {\\r\\n      content: ' \\\\25CF';\\r\\n      font-size: 1em;\\r\\n      color: green;\\r\\n    }\\r\\n  \\r\\n  .circle-red:before {\\r\\n      content: ' \\\\25CF';\\r\\n      font-size: 1em;\\r\\n      color: red;\\r\\n    }\\r\\n  \\r\\n  .cursorPointer {\\r\\n      cursor: pointer;\\r\\n    }\\r\\n  \\r\\n  .textCenter {\\r\\n      text-align: center;\\r\\n    }\\r\\n  \\r\\n  .floatLeft {\\r\\n      float: left;\\r\\n    }\\r\\n  \\r\\n  *,\\r\\n    *:before,\\r\\n    *:after {\\r\\n      box-sizing: border-box;\\r\\n    }\\r\\n  \\r\\n  body {\\r\\n      padding: 2.5em 0;\\r\\n      color: white;\\r\\n    }\\r\\n  \\r\\n  .container {\\r\\n      margin: 0 auto;\\r\\n      background: #444753;\\r\\n      border-radius: 0.3em;\\r\\n    }\\r\\n  \\r\\n  .people-list {\\r\\n      float: left;\\r\\n    }\\r\\n  \\r\\n  .people-list input {\\r\\n      border-radius: 0.2em;\\r\\n      border: none;\\r\\n      padding: 1em;\\r\\n      color: white;\\r\\n      background: #6A6C75;\\r\\n      width: 90%;\\r\\n      font-size: 1em;\\r\\n    }\\r\\n  \\r\\n  .people-list .fa-search {\\r\\n      position: relative;\\r\\n      left: -1.8em;\\r\\n    }\\r\\n  \\r\\n  .people-list ul {\\r\\n      padding: 0;\\r\\n    }\\r\\n  \\r\\n  .people-list ul li .userPresence {\\r\\n      float: left;\\r\\n      padding: 0.7em 0.2em;\\r\\n      color: white;\\r\\n      text-transform: capitalize;\\r\\n    }\\r\\n  \\r\\n  .textCapitalize {\\r\\n      text-transform: capitalize;\\r\\n      font-size: 1.2em;\\r\\n    }\\r\\n  \\r\\n  .people-list img {\\r\\n      float: left;\\r\\n    }\\r\\n  \\r\\n  .people-list .about {\\r\\n      float: left;\\r\\n    }\\r\\n  \\r\\n  .people-list .about {\\r\\n      padding-left: 0.4em;\\r\\n    }\\r\\n  \\r\\n  .people-list .status {\\r\\n      color: #92959E;\\r\\n    }\\r\\n  \\r\\n  .chat {\\r\\n      height: 100vh;\\r\\n      float: left;\\r\\n      background: #F2F5F8;\\r\\n      border-top-right-radius: 0.3em;\\r\\n      border-bottom-right-radius: 0.3em;\\r\\n      color: #434651;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header {\\r\\n      padding: 0.2em;\\r\\n      border-bottom: 0.15em solid white;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header img {\\r\\n      float: left;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header .chat-about {\\r\\n      float: left;\\r\\n      padding-left: 0.8em;\\r\\n      margin-top: 0.4em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header .dropdown{\\r\\n      float: right;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header .chat-with {\\r\\n      font-weight: bold;\\r\\n      font-size: 1.1em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header .chat-num-messages {\\r\\n      color: #92959E;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-header .fa-star {\\r\\n      float: right;\\r\\n      color: #D8DADF;\\r\\n      font-size: 1.42em;\\r\\n      margin-top: 0.85em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history {\\r\\n      padding: 2em 2em 1.42em;\\r\\n      border-bottom: 0.15em solid white;\\r\\n      overflow-y: scroll;\\r\\n      height: 80vh;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .message-data {\\r\\n      margin-bottom: 1em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .message-data-time {\\r\\n      color: #a8aab1;\\r\\n      padding-left: 0.4em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .message {\\r\\n      color: white;\\r\\n      padding: 0.5em 1.42em;\\r\\n      line-height: 1.9em;\\r\\n      font-size: 1.1em;\\r\\n      border-radius: 7px;\\r\\n      margin-bottom: 2em;\\r\\n      width: 90%;\\r\\n      position: relative;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .message:after {\\r\\n      bottom: 100%;\\r\\n      left: 7%;\\r\\n      border: solid transparent;\\r\\n      content: \\\" \\\";\\r\\n      height: 0;\\r\\n      width: 0;\\r\\n      position: absolute;\\r\\n      pointer-events: none;\\r\\n      border-bottom-color: #86BB71;\\r\\n      border-width: 0.8em;\\r\\n      margin-left: -0.8em;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .my-message {\\r\\n      background: #86BB71;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .other-message {\\r\\n      background: #94C2ED;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-history .other-message:after {\\r\\n      border-bottom-color: #94C2ED;\\r\\n      left: 90%;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-message textarea {\\r\\n      width: 100%;\\r\\n      border: none;\\r\\n      padding: 0.8em 1.42em;\\r\\n      margin-bottom: 0.8em;\\r\\n      border-radius: 5px;\\r\\n      resize: none;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-message .fa-file-o,\\r\\n    .chat .chat-message .fa-file-image-o {\\r\\n      font-size: 1.1em;\\r\\n      color: gray;\\r\\n      cursor: pointer;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-message button {\\r\\n      float: right;\\r\\n      color: #94C2ED;\\r\\n      font-size: 1.1em;\\r\\n      text-transform: uppercase;\\r\\n      border: none;\\r\\n      cursor: pointer;\\r\\n      font-weight: bold;\\r\\n      background: #F2F5F8;\\r\\n    }\\r\\n  \\r\\n  .chat .chat-message button:hover {\\r\\n      color: #75b1e8;\\r\\n    }\\r\\n  \\r\\n  .online,\\r\\n    .offline,\\r\\n    .me,\\r\\n    .warning {\\r\\n      margin-right: 3px;\\r\\n      font-size: 0.8em;\\r\\n    }\\r\\n  \\r\\n  .online {\\r\\n      color: #86BB71;\\r\\n    }\\r\\n  \\r\\n  .offline {\\r\\n      color: #E38968;\\r\\n    }\\r\\n  \\r\\n  .me {\\r\\n      color: #94C2ED;\\r\\n    }\\r\\n  \\r\\n  .warning {\\r\\n      color: #e78930;\\r\\n    }\\r\\n  \\r\\n  .align-left {\\r\\n      text-align: left;\\r\\n    }\\r\\n  \\r\\n  .align-right {\\r\\n      text-align: right;\\r\\n    }\\r\\n  \\r\\n  .float-right {\\r\\n      float: right;\\r\\n    }\\r\\n  \\r\\n  .clearfix:after {\\r\\n      visibility: hidden;\\r\\n      display: block;\\r\\n      font-size: 0;\\r\\n      content: \\\" \\\";\\r\\n      clear: both;\\r\\n      height: 0;\\r\\n    }\\r\\n  \\r\\n  .customButton {\\r\\n      width: 100%;\\r\\n    }\\r\\n  \\r\\n  .activeChat {\\r\\n      background: #393a41;\\r\\n    }\\r\\n  \\r\\n  .typeOfChats {\\r\\n      background: #393a41;\\r\\n      color: white;\\r\\n      margin-top: 0.2em;\\r\\n      margin-bottom: 0.2em;\\r\\n    }\\r\\n  \\r\\n  .blankContent{\\r\\n      height: 100vh;\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n      font-size: 3rem;\\r\\n      color: #999;\\r\\n    }\\r\\n  \\r\\n  @media only screen and (max-width:575px) {\\r\\n      .chat .chat-history {\\r\\n        height:50vh;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n  @media only screen and (min-width:576px) and (max-width:768px) {\\r\\n      .chat .chat-history {\\r\\n        height:50vh;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n  @media only screen and (min-width:769px) and (max-width:992px) {\\r\\n      .chat .chat-history {\\r\\n        height:65vh;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n  @media only screen and (min-width:993px) and (max-width:1200  px) {\\r\\n      .chat .chat-history {\\r\\n        height:50vh;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n  /* user list items */\\r\\n  \\r\\n  .crop {\\r\\n    border-radius: 100%;\\r\\n    line-height: 1em;\\r\\n    padding: 1em;\\r\\n    text-align: center;\\r\\n    margin: 0em;\\r\\n    width: 3em;\\r\\n    height: 3em;\\r\\n    float: left;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n  \\r\\n  .about {\\r\\n    float: left;\\r\\n    padding-left: 0.4em;\\r\\n  }\\r\\n  \\r\\n  .online,\\r\\n  .offline,\\r\\n  .me,\\r\\n  .warning {\\r\\n    margin-right: 3px;\\r\\n    font-size: 0.8em;\\r\\n  }\\r\\n  \\r\\n  .online {\\r\\n    color: #86BB71;\\r\\n  }\\r\\n  \\r\\n  .offline {\\r\\n    color: #E38968;\\r\\n  }\\r\\n  \\r\\n  .me {\\r\\n    color: #94C2ED;\\r\\n  }\\r\\n  \\r\\n  .warning {\\r\\n    color: #00c8e7;\\r\\n  }\\r\\n  \\r\\n  .status {\\r\\n    color: #92959E;\\r\\n  }\\r\\n  \\r\\n  .name {\\r\\n    float: left;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"displayBlockMobile d-block d-sm-none\\\" style=\\\"width:100%;z-index:1;\\\">\\n\\n      <div class=\\\"col-sm-12 p-0\\\">\\n\\n        <nav class=\\\"navbar navbar-expand-md  navbar-dark bg-dark\\\">\\n\\n          <a class=\\\"navbar-brand text-white\\\">\\n            {{userInfo.firstName}} {{userInfo.lastName}}\\n            <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n            <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n          </a>\\n\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n          </button>\\n\\n          <div class=\\\"collapse people-list navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <button (click)=\\\"logout()\\\" class=\\\"btn btn-info customButton\\\">Logout</button>\\n            <ul class=\\\"list\\\">\\n              <li class=\\\"p-2 typeOfChats\\\">\\n                Groups joined:\\n              </li>\\n              <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of groupsJoined\\\" (click)=\\\"userSelectedToChat(group.roomId, group.roomName, group.admin)\\\">\\n                <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n                  <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n                </div>\\n              </li>\\n              <li class=\\\"p-2 typeOfChats\\\">\\n                Other Groups:\\n              </li>\\n              <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of otherGroups\\\" (click)=\\\"groupSelectedToChat(group.roomId,group.roomName)\\\">\\n                <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n                  <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n                </div>\\n              </li>\\n            </ul>\\n\\n          </div>\\n\\n        </nav>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-12 displayNoneMobile d-none d-sm-block col-sm-4 col-md-4 people-list p-0\\\" id=\\\"people-list\\\">\\n\\n      <div class=\\\"p-3 text-white textCapitalize textCenter\\\">\\n        {{userInfo.firstName}} {{userInfo.lastName}}\\n        <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n        <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n        <br>\\n        <br>\\n        <button (click)=\\\"logout()\\\" class=\\\"btn btn-info customButton\\\">Logout</button>\\n      </div>\\n\\n      <form #CreateGroupForm=\\\"ngForm\\\" (ngSubmit)=\\\"createGroup()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label style=\\\"color: white\\\">Group Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"groupName\\\" [(ngModel)]=\\\"groupName\\\" #groupName1=\\\"ngModel\\\" required>\\n        </div>\\n        <div [hidden]='groupName1.valid || groupName1.pristine' class=\\\"alert alert-danger\\\">\\n          Group name is required\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-block btn-success\\\">Create Group</button>\\n      </form>\\n\\n\\n      <ul class=\\\"list\\\">\\n        <li class=\\\"p-2 typeOfChats\\\">\\n          Groups joined:\\n        </li>\\n        <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of groupsJoined\\\" (click)=\\\"userSelectedToChat(group.roomId, group.roomName, group.admin)\\\">\\n          <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n            <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n          </div>\\n        </li>\\n        <li class=\\\"p-2 typeOfChats\\\">\\n          Other Groups:\\n        </li>\\n        <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of otherGroups\\\" (click)=\\\"groupSelectedToChat(group.roomId,group.roomName)\\\">\\n          <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n            <user-details [hidden]=\\\"!group.status\\\" [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n    </div>\\n\\n    <div class=\\\"col-12 col-sm-8 col-md-8 chat \\\">\\n      <div class=\\\"chat-header clearfix mobileMenu\\\" *ngIf=\\\"receiverName\\\">\\n        <first-char [name]=\\\"receiverName\\\" [userBg]=\\\"'blue'\\\" [userColor]=\\\"'white'\\\" (notify)=\\\"showGroupName($event)\\\"></first-char>\\n\\n        <div class=\\\"chat-about\\\">\\n          <div class=\\\"chat-with\\\">Chat with {{receiverName}}</div>\\n          <div class=\\\"chat-with font-green\\\" *ngIf='personTyping'>{{personTyping}} is typing...</div>\\n        </div>\\n        <div class=\\\"dropdown\\\" [hidden]='groupMember'>\\n          <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <i class=\\\"fa fa-ellipsis-v\\\"></i>\\n          </button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n            <form class=\\\"px-4 py-3\\\" #InviteForm (ngSubmit)=\\\"sendInvite()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleDropdownFormEmail1\\\">Email address</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"userMail\\\" [(ngModel)]=\\\"userMail\\\" #userMail1=\\\"ngModel\\\" placeholder=\\\"email@example.com\\\"\\n                  required>\\n              </div>\\n              <div [hidden]='userMail1.valid || userMail1.pristine' class=\\\"alert alert-danger\\\">\\n                Email is required\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Invite</button>\\n            </form>\\n            <a class=\\\"dropdown-item btn\\\" (click)=\\\"closeGroup()\\\">Close Group</a>\\n            <a class=\\\"dropdown-item btn\\\" routerLink=\\\"/showDetails\\\">Group Details</a>\\n            <a class=\\\"dropdown-item btn\\\" (click)=\\\"deleteGroup()\\\">Delete Group</a>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- end chat-header -->\\n\\n      <div #scrollMe [scrollTop]=\\\"(scrollToChatTop)?0:scrollMe.scrollHeight\\\" class=\\\"chat-history\\\" *ngIf=\\\"receiverName\\\">\\n\\n        <ul [hidden]='groupMember'>\\n          <li class=\\\"textCenter\\\" *ngIf=\\\"receiverName\\\">\\n\\n            <span class=\\\"cursorPointer\\\" (click)=\\\"loadEarlierPageOfChat()\\\">Load Previous Chat</span>\\n\\n            <br>\\n\\n            <span *ngIf=\\\"loadingPreviousChat == true\\\">Loading...</span>\\n\\n          </li>\\n          <li class=\\\"clearfix\\\" *ngFor=\\\"let message of messageList\\\">\\n            <div class=\\\"message-data\\\" [ngClass]=\\\"{'align-right': message.senderId == userInfo.userId}\\\">\\n              <span class=\\\"message-data-time\\\">{{message?.createdOn | date: 'medium' }}</span> &nbsp; &nbsp;\\n              <span class=\\\"message-data-name floatLeft\\\" *ngIf=\\\"message.senderId != userInfo.userId\\\">\\n                <i class=\\\"fa fa-circle online\\\"></i> {{ message?.senderName }}</span>\\n              <span class=\\\"message-data-name\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\">{{ message?.senderName }}</span>\\n              <i class=\\\"fa fa-circle me\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\"></i>\\n\\n            </div>\\n            <div class=\\\"message\\\" [ngClass]=\\\"{'float-right other-message': message.senderId == userInfo.userId, 'my-message': message.senderId != userInfo.userId}\\\">\\n              {{message?.message }}\\n            </div>\\n          </li>\\n\\n        </ul>\\n\\n      </div>\\n      <div *ngIf=\\\"!receiverName\\\" class=\\\"col-sm blankContent\\\">\\n        Click on Group to start a GroupChat!!!\\n      </div>\\n      <!-- end chat-history -->\\n\\n      <div class=\\\"chat-message clearfix p-2\\\" *ngIf=\\\"receiverName\\\" [hidden]='groupMember'>\\n        <textarea name=\\\"message-to-send\\\" id=\\\"message-to-send\\\" (keypress)=\\\"userTyping($event)\\\" (keydown)=\\\"sendMessageUsingEnter($event)\\\"\\n          [(ngModel)]=\\\"messageText\\\" placeholder=\\\"Type your message\\\" rows=\\\"3\\\"></textarea>\\n\\n        <button (click)=\\\"sendMessage()\\\">Send</button>\\n\\n      </div>\\n      <!-- end chat-message -->\\n      <!--Join Group Button-->\\n      <button class=\\\"btn btn-primary btn-block\\\" [hidden]=\\\"!groupMember\\\" (click)=\\\"joinGroup(receiverName,receiverId)\\\">Join Group</button>\\n    </div>\\n\\n  </div>\\n  <!-- end chat -->\\n\\n</div>\\n<!-- end container -->\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n//services\nimport { SocketService } from '../../socket.service';\nimport { AppService } from '../../app.service';\n\n//toastr\nimport { ToastrService } from 'ngx-toastr';\n//cookie\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n//interface\nimport { ChatMessage } from './chat';\nimport { Router } from '../../../../node_modules/@angular/router';\nimport { identifierModuleUrl } from '../../../../node_modules/@angular/compiler';\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n  providers: [SocketService]\n})\nexport class ChatBoxComponent implements OnInit {\n\n  @ViewChild('scrollMe', { read: ElementRef })\n\n  public scrollMe: ElementRef;\n\n  public groupName: string;\n  public authToken: any;\n  public userInfo: any;\n  public userList: any = [];\n  public disconnectedSocket: boolean;\n  public groupsJoined: any = [];\n  public otherGroups: any = [];\n  public groupMember: boolean = false;\n\n  public scrollToChatTop: boolean = false;\n\n  public receiverId: any;\n  public receiverName: any;\n  public previousChatList: any = [];\n  public messageText: any;\n  public messageList: any = [];\n  public pageValue: number = 0;\n  public loadingPreviousChat: boolean = false;\n  public userMail: string;\n  public personTyping: string;\n\n  constructor(\n    public AppService: AppService,\n    public SocketService: SocketService,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n\n    this.authToken = Cookie.get('authToken');\n    this.userInfo = this.AppService.getUserInfoFromLocalStorage();\n    this.receiverId = Cookie.get('receiverId');\n    this.receiverName = Cookie.get('receiverName');\n\n    if (this.receiverId != null || this.receiverId != undefined || this.receiverId != '') {\n      this.userSelectedToChat(this.receiverId, this.receiverName);\n    }\n\n    this.checkStatus();\n\n    this.verifyUserConfirmation();\n    this.getOnlineUserList();\n    this.loadGroup();\n    this.getMessageFromAGroup();\n\n    if (Cookie.get('callMethod')) {\n      this.groupSelectedToChat(this.receiverId, this.receiverName);\n    }\n    this.groupCreated();\n    this.groupRemoved();\n    this.refreshGroups();\n    this.typing();\n\n  }//end ngOnInit\n\n  public checkStatus: any = () => {\n\n    if (Cookie.get('authToken') === undefined || Cookie.get('authToken') === null || Cookie.get('authToken') === \"\") {\n\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n    }\n  }//end checkStatus\n\n  public verifyUserConfirmation: any = () => {\n\n    this.SocketService.verifyUser()\n      .subscribe((data) => {\n\n        this.disconnectedSocket = false;\n\n        this.SocketService.setUser(this.authToken);\n\n      });//end subscribe\n  }//end verifyUserConfirmation\n\n  public getOnlineUserList: any = () => {\n\n    this.SocketService.onlineUserList()\n      .subscribe((userListfromdb) => {\n\n        this.userList = [];\n\n        for (let x in userListfromdb) {\n\n          let temp = { 'userId': x, 'name': userListfromdb[x], 'unread': 0, 'chatting': false };\n\n          this.userList.push(temp);\n\n        }\n\n      });//end subscribe\n\n  }//end getOnlineUserList\n\n  //chat related methods\n\n  public groupCreated: any = () => {\n\n    this.SocketService.groupCreated()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Created: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end GroupCreated\n\n  public groupRemoved: any = () => {\n\n    this.SocketService.groupRemoved()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Removed: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end GroupRemoved\n\n  public getPreviousChatWithAUser: any = () => {\n\n    let previousData = (this.messageList.length > 0 ? this.messageList.slice() : []);\n\n    this.AppService.getChat(this.receiverId, this.pageValue)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.messageList = apiResponse.data.concat(previousData);\n        } else {\n          this.messageList = previousData;\n        }\n        this.loadingPreviousChat = false;\n      }, (err) => {\n        this.toastr.error('some error occured', \"Error!\");\n      });\n\n  }//end getPreviousChatWithAUser\n\n  public loadEarlierPageOfChat: any = () => {\n\n    this.loadingPreviousChat = true;\n\n    this.pageValue++;\n    this.scrollToChatTop = true;\n\n    this.getPreviousChatWithAUser();\n\n  }//end loadPreviousChat\n\n  public userSelectedToChat: any = (id, name) => {\n\n    this.groupMember = false;\n    Cookie.set('receiverId', id);\n    Cookie.set('receiverName', name);\n\n    this.receiverId = id;\n    this.receiverName = name;\n\n    this.messageList = [];\n    this.pageValue = 0;\n    this.scrollToChatTop = false;\n    let chatDetails = {\n      userId: this.userInfo.userId,\n      senderId: id\n    }\n\n    this.getPreviousChatWithAUser();\n\n  }//end userSelectedToChat\n\n  public groupSelectedToChat: any = (id, name) => {\n\n    this.groupMember = true;\n\n    Cookie.set('receiverId', id);\n    Cookie.set('receiverName', name);\n\n    this.receiverId = id;\n    this.receiverName = name;\n\n  }//end groupSelectedToChat\n\n\n  public sendMessageUsingEnter: any = (event: any) => {\n\n    if (event.keyCode === 13) {//13 is keycode of enter key\n\n      this.sendMessage();\n\n    }\n\n  }//end sendMessageUsingEnter\n\n  public userTyping: any = (event: any) => {\n\n    let data: any = {};\n    data.room = Cookie.get('receiverId');\n    data.userName = this.userInfo.firstName;\n    if (event.keyCode) {//13 is keycode of enter key\n\n      this.SocketService.userTyping(data);\n\n    }\n\n  }//end userTyping\n\n  public typing: any = () => {\n\n    this.SocketService.typingInRoom()\n      .subscribe((data) => {\n\n        if(this.receiverId === data.room){\n        this.personTyping = data.userName;\n      }\n        setTimeout(() => {\n          this.personTyping = \"\";\n        }, 2000);\n\n      });//end subscribe\n  }//end typing\n\n  public createGroup = () => {\n\n    if (this.groupName === \"\" || this.groupName === null || this.groupName === undefined) {\n      this.toastr.warning(\"Group Name required\", \"Warning!\");\n    }\n    else {\n      let data: any = {}\n      data.email = this.userInfo.email;\n      data.grpname = this.groupName;\n      this.groupName = \" \";\n\n      this.AppService.createGroup(data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(`Group: ${data.grpname} created`, \"Successfully!\");\n            this.userInfo.groups.push(apiResponse.data.roomId);\n            this.AppService.setUserInfoInLocalStorage(this.userInfo);\n            this.loadGroup();\n            this.SocketService.groupAdded(data.grpname);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        }, (error) => {\n          this.toastr.error(\"Some error Occurred\", \"Error!\");\n        });//end subscribe\n    }//end else\n  }//end createGroup\n\n  public loadGroup = () => {\n\n    this.AppService.getGroups().subscribe((apiResponse) => {\n      this.otherGroups = [];\n      this.groupsJoined = [];\n      if (apiResponse.status == 200) {\n\n        for (let group of apiResponse.data) {\n          let flag = false;\n          for (let userGroupId of this.userInfo.groups) {\n            if (group.roomId === userGroupId && group.status != false) {\n              this.groupsJoined.push(group)\n              flag = true;\n              break;\n            }//end if\n          }//end inner for\n          if (!flag && group.status != false) {\n            this.otherGroups.push(group);\n          }\n          if (this.userInfo.groups.length === 0) {\n            this.otherGroups = apiResponse.data;\n            break;\n          }\n        }//end external for loop\n\n      }//end if for success\n      else {\n        this.toastr.error(apiResponse.message, \"Error!\");\n      }//end else if error\n    },\n      (error) => {\n        this.toastr.error(\"Some Error Occurred\", \"Error!\");\n      });//end subscribe \n\n  }//end loadGroup\n\n  public joinGroup = (name, id) => {\n\n    let data: any = {};\n    data.userEmail = this.userInfo.email;\n    data.roomId = id;\n    data.userId = this.userInfo.userId;\n\n    this.AppService.joinGroup(data).subscribe((apiResponse) => {\n\n      if (apiResponse.status == 200) {\n        this.toastr.success(`Chat Group:${name} Joined`, \"Success!\");\n        this.userInfo.groups.push(id);\n        this.AppService.setUserInfoInLocalStorage(this.userInfo);\n        this.SocketService.joinGroup(data);\n        this.loadGroup();\n        this.userSelectedToChat(id, name);\n      }\n      else {\n        this.toastr.error(apiResponse.message, \"Error!\");\n      }\n    }, (error) => {\n      this.toastr.error(\"Some error occurred\", \"Error!\");\n    })//end subscribe\n\n  }//end joinGroup\n\n  public closeGroup = () => {\n\n    this.AppService.closeGroup(this.receiverId)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.SocketService.groupClosed(this.receiverName);\n          Cookie.set('receiverId', this.userInfo.userId);\n          Cookie.set('receiverName', ``);\n          this.receiverId = Cookie.get('receiverId');\n          this.receiverName = Cookie.get('receiverName');\n          this.userSelectedToChat(this.receiverId, this.receiverName);\n        }\n        else {\n          this.toastr.error(apiResponse.message, '!Error');\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });//end subscribe\n\n  }//end closeGroup\n\n  public refreshGroups = () => {\n\n    this.SocketService.closedGroup()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Closed: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end refreshGroups\n\n  public sendInvite = () => {\n    let data: any = {};\n\n    data.userEmail = this.userMail;\n    data.roomId = this.receiverId;\n\n    this.AppService.sendInvite(data)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.info(`Mail Send to: ${data.userEmail}`, \"Update\");\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      }, (error) => {\n        this.toastr.error(\"Some Error Occurred\", \"Error!\");\n      })//end subscribe\n\n  }//end sendInvite\n\n\n  public deleteGroup = () => {\n\n    this.receiverId = Cookie.get('receiverId');\n    this.AppService.deleteGroup(this.receiverId)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.SocketService.groupDeleted(this.receiverName);\n          Cookie.set('receiverId', this.userInfo.userId);\n          Cookie.set('receiverName', ``);\n          this.receiverId = Cookie.get('receiverId');\n          this.receiverName = Cookie.get('receiverName');\n          this.userSelectedToChat(this.receiverId, this.receiverName);\n        }\n      })//end subscribe\n  }//end deleteGroup\n\n  public sendMessage: any = () => {\n\n    if (this.messageText) {\n\n      let chatMsg: ChatMessage = {\n        senderName: this.userInfo.firstName + \" \" + this.userInfo.lastName,\n        senderId: this.userInfo.userId,\n        receiverName: this.receiverName,\n        receiverId: this.receiverId,\n        message: this.messageText,\n        createdOn: new Date(),\n      }//end chatMsg\n\n      this.SocketService.sendChatMessage(chatMsg);\n      this.pushToChatWindow(chatMsg);\n\n    }\n    else {\n      this.toastr.warning('Text Message cannot be Empty');\n    }\n  }//end sendMessage\n\n  public pushToChatWindow: any = (data) => {\n\n    this.messageText = \"\";\n    this.messageList.push(data);\n    this.scrollToChatTop = false;\n\n  }//end pushToChatWindow\n\n  public getMessageFromAGroup: any = () => {\n\n    this.SocketService.groupChatMessage()\n      .subscribe((data) => {\n\n        if (data.receiverId === this.receiverId && data.senderId != this.userInfo.userId) {\n          this.messageList.push(data);\n        }\n\n        this.toastr.success(`${data.senderName} says : ${data.message}`);\n\n        this.scrollToChatTop = false;\n\n      });//end subscribe\n\n  }//end getMessageFromAGroup\n\n  public logout: any = () => {\n\n    this.AppService.logout()\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status === 200) {\n          Cookie.delete('authToken');\n          Cookie.delete('receiverId');\n          Cookie.delete('receiverName');\n\n          this.SocketService.exitSocket();\n          this.router.navigate(['/']);//navigating to login page\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n        }\n      }, (err) => {\n        this.toastr.error('some error occured');\n      });//end subscribe\n\n  }//end logout\n\n  //handle the output from a child component\n\n  public showGroupName = (name: string) => {\n\n    this.toastr.success(\"You are in group \" + name);\n  }//end showGroupName\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserDetailsComponent } from '../shared/user-details/user-details.component';\n\n//for routing\nimport { RouterModule, Routes } from '@angular/router';\nimport { JoinGroupComponent } from './join-group/join-group.component';\nimport { GroupDetailsComponent } from './group-details/group-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'chat', component: ChatBoxComponent },\n      { path: 'joinGroup/:receiverId/:receiverName', component: JoinGroupComponent },\n      { path: 'showDetails', component: GroupDetailsComponent }\n    ]),\n    SharedModule\n  ],\n  declarations: [ChatBoxComponent, JoinGroupComponent, GroupDetailsComponent]\n})\nexport class ChatModule { }\n","module.exports = \".members{\\r\\n    background-color: wheat;\\r\\n    color: black;\\r\\n}\\r\\n.groupName{\\r\\n    font-size: 3em;\\r\\n    font-style: italic;\\r\\n    font-weight: 200;\\r\\n    color: black;\\r\\n}\\r\\n.header{\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-12 header\\\">\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"groupName col-12 col-sm-8\\\" [hidden]=\\\"!noTextBox\\\">\\n          {{roomName | uppercase}}\\n        </div>\\n        <div [hidden]=\\\"!noTextBox\\\" class=\\\" col-12 col-sm-4\\\" style=\\\"padding-top: 3%\\\">\\n          <!-- <i class=\\\"fas fa-pencil-alt\\\"></i> -->\\n          <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"edit()\\\">Edit</button>\\n        </div>\\n      </div>\\n\\n      <form class=\\\"form-inline row\\\" #form1=\\\"ngForm\\\" [hidden]=\\\"noTextBox\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"col-12 col-sm-8\\\" name=\\\"roomName\\\" [(ngModel)]=\\\"roomName\\\" #roomName1=\\\"ngModel\\\" class=\\\"form-control mb-10 mr-sm-10\\\"\\n          id=\\\"inlineFormInputName2\\\" placeholder=\\\"Group name\\\" required>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary col-12 col-sm-4\\\" (click)=\\\"saveName()\\\">Save</button>\\n\\n        <div [hidden]='roomName1.valid || roomName1.pristine' class=\\\"alert alert-danger\\\">\\n          Group name is required\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"col-12 members\\\">\\n\\n      <ul class=\\\"list\\\">\\n\\n        <li class=\\\"clearfix cursorPointer col-12\\\" *ngFor=\\\"let member of members\\\">\\n          <user-details [userFirstName]=\\\"member.name\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"\\\" [messageRead]=\\\" \\\"></user-details>\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n    <a class=\\\"btn btn-block btn-outline-success\\\" routerLink=\\\"/chat\\\">Go back</a>\\n\\n  </div>\\n\\n</section>\"","import { Component, OnInit } from '@angular/core';\n//cookie\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ActivatedRoute, Router } from '../../../../node_modules/@angular/router';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from '../../../../node_modules/ngx-toastr';\nimport { SocketService } from '../../socket.service';\n\n@Component({\n  selector: 'app-group-details',\n  templateUrl: './group-details.component.html',\n  styleUrls: ['./group-details.component.css']\n})\nexport class GroupDetailsComponent implements OnInit {\n\n  public roomId: string;\n  public roomName: string;\n  public members: any = [];\n  public noTextBox: boolean = true;\n\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public appService: AppService,\n    public toastr: ToastrService,\n  ) { }\n\n  ngOnInit() {\n\n    this.roomId = Cookie.get('receiverId');\n    console.log(this.roomId);\n    this.roomName = Cookie.get('receiverName');\n\n    this.appService.getGroup(this.roomId)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.members = apiResponse.data.members;\n          console.log(apiResponse);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        })//end subscribe\n  }\n\n  public saveName() {\n\n    let data: any = {}\n    data.chatRoomId = this.roomId;\n    data.roomName = this.roomName;\n\n    this.appService.editGroup(data)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Group Name Changed\", \"Success!\");\n          this.noTextBox = true;\n          Cookie.set('receiverName', data.roomName);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        }\n      );//end subscribe\n  }//end saveName\n\n  public edit() {\n    this.noTextBox = false;\n  }//end edit\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n//cookie\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ActivatedRoute, Router } from '../../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-join-group',\n  templateUrl: './join-group.component.html',\n  styleUrls: ['./join-group.component.css']\n})\nexport class JoinGroupComponent implements OnInit {\n\n  constructor(\n    public router: Router,\n    public _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    let receiverId: string = this._route.snapshot.paramMap.get('receiverId');\n    let receiverName: string = this._route.snapshot.paramMap.get('receiverName');\n    Cookie.set('receiverId', receiverId);\n    Cookie.set('receiverName', receiverName);\n    Cookie.set('callMethod', 'true');\n\n    this.router.navigate(['/chat']);\n  }\n\n}\n","module.exports = \".crop {\\r\\n    border-radius: 100%;\\r\\n    line-height: 1em;\\r\\n    padding: 1em;\\r\\n    text-align: center;\\r\\n    margin: 0em;\\r\\n    width: 3em;\\r\\n    height: 3em;\\r\\n    float: left;\\r\\n    text-transform: uppercase;\\r\\n  }\"","module.exports = \"<div (click)='nameClicked()' class=\\\"crop\\\" [style.color]=\\\"userColor? userColor:'white'\\\" [style.background]=\\\"userBg? userBg: 'orange'\\\">\\n  {{firstChar}}\\n</div>\"","import { Component, OnInit, Input, OnChanges, EventEmitter, Output, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit, OnChanges {\n\n  @Input() name: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name: string = \"\";\n\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this._name = this.name;\n    this.firstChar = this._name[0];\n  }//end ngOnInit\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    let name = changes.name;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n\n  }//end ngOnChanges\n\n  nameClicked() {\n    this.notify.emit(this._name);\n  }//end nameClicked\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FirstCharComponent } from './first-char/first-char.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [UserDetailsComponent, FirstCharComponent],\n  exports: [\n    UserDetailsComponent,\n    FirstCharComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\r\\n    border-radius: 100%;\\r\\n    line-height: 1em;\\r\\n    padding: 1em;\\r\\n    text-align: center;\\r\\n    margin: 0em;\\r\\n    width: 3em;\\r\\n    height: 3em;\\r\\n    float: left;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n  \\r\\n  .about {\\r\\n    float: left;\\r\\n    padding-left: 0.4em;\\r\\n  }\\r\\n  \\r\\n  .online,\\r\\n  .offline,\\r\\n  .me,.Active\\r\\n  .warning {\\r\\n    margin-right: 3px;\\r\\n    font-size: 0.8em;\\r\\n  }\\r\\n  \\r\\n  .online,.Active {\\r\\n    color: #86BB71;\\r\\n  }\\r\\n  \\r\\n  .offline {\\r\\n    color: #E38968;\\r\\n  }\\r\\n  \\r\\n  .me {\\r\\n    color: #94C2ED;\\r\\n  }\\r\\n  \\r\\n  .warning {\\r\\n    color: #00c8e7;\\r\\n  }\\r\\n  \\r\\n  .status {\\r\\n    color: #92959E;\\r\\n  }\\r\\n  \\r\\n  .name {\\r\\n    float: left;\\r\\n  }\"","module.exports = \"<!-- <div class=\\\"crop\\\" [style.color]=\\\"userColor ? userColor: 'white'\\\" [style.background]=\\\"userBg ? userBg:'blue'\\\">\\n  {{firstChar}}\\n</div> -->\\n\\n<first-char [name]=\\\"userFirstName\\\" [userBg]=\\\"'blue'\\\" [userColor]=\\\"'white'\\\" (notify)=\\\"showGroupName($event)\\\"></first-char>\\n\\n<div class=\\\"about\\\">\\n  <div class=\\\"name\\\">{{userFirstName}}\\n    <i *ngIf=\\\"messageRead\\\" class=\\\"fa fa-circle warnig\\\"></i>\\n  </div>\\n  <div class=\\\"status\\\" *ngIf=\\\"userStatus\\\">\\n    <i class=\\\"fa fa-circle\\\" [ngClass]=\\\"userStatus\\\"></i>{{userStatus}}\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Cookie } from '../../../../node_modules/ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  @Input() userFirstName: string;\n  @Input() userLastName: string;\n  @Input() userStatus: string;\n  @Input() messageRead: string;\n\n  public firstChar: string;\n\n  constructor(public toastr: ToastrService) { }\n\n  ngOnInit() {\n  \n    this.firstChar = this.userFirstName[0]\n\n  }\n\n  public showGroupName = (name: string) => {\n\n    this.toastr.success(\"You are in group \" + name);\n  }//end showGroupName\n}\n","import { Injectable } from '@angular/core';\n\n//importing socket io\nimport * as io from 'socket.io-client';\nimport { Observable, throwError } from 'rxjs';\n\n//for cookie\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n//for http requests\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private url = \"http://api.groupchatapp.hanumantpatil.co\";\n\n  private socket;\n\n  constructor(public http: HttpClient) {\n    //first step where connection is established. i.e. Handshake moment\n    this.socket = io(this.url);\n  }\n\n  //events to be listened\n\n  public verifyUser = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('verifyUser', (data) => {\n\n        observer.next(data);\n\n      });//end socket\n\n    });//end return of Observable\n\n  }//end verifyUser\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"online-user-list\", (userList) => {\n\n        observer.next(userList);\n\n      });//end socket\n\n    });//end Observable\n\n  }//end onlineUserList\n\n  public authError = () => {\n    return Observable.create((observer) => {\n\n      this.socket.on('auth-error', (data) => {\n\n        observer.next(data);\n\n      })//end socket\n\n    });//end observer\n\n  }//end authError\n\n  public typingInRoom = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"typing\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end typingInRoom\n\n  public groupAdded = (data) => {\n\n    this.socket.emit(\"newGroup\", data);//endsocket \n\n  }//end Group Added\n\n  public groupClosed = (data) => {\n\n    this.socket.emit(\"GroupClosed\", data);//endsocket \n\n  }//end Group Closed\n\n  public groupCreated = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"GroupCreated\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n  public closedGroup = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"closedGroup\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n  public groupDeleted = (data) => {\n\n    this.socket.emit(\"GrpDeleted\", data);//endsocket \n\n  }//end Group Deleted\n\n  public groupRemoved = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"GroupRemoved\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n\n  public disconnectedSocket = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"disconnect\", () => {\n\n        observer.next();\n\n      });//end Socket\n\n    });//end Observable\n\n  }//end disconnectedSocket\n\n  //end events to be listened\n\n  //events to be emitted\n\n  public setUser = (authToken) => {\n\n    this.socket.emit(\"set-user\", authToken);\n\n  }//end setUser \n\n  public joinGroup = (data) => {\n\n    this.socket.emit(data.userId, data);\n\n  }//end joinGroup\n\n  public userTyping = (data) => {\n\n    this.socket.emit(\"userTyping\", data);\n\n  }//end userTyping\n\n  //end of events to be emitted\n\n  //chatting related events\n\n  public groupChatMessage = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('message', (data) => {\n\n        observer.next(data);\n\n      });//end socket\n\n    });//end observable\n\n  }//end groupChatMessage\n\n  public sendChatMessage = (chatMsgObject) => {\n\n    this.socket.emit('chat-msg', chatMsgObject);\n\n  }//end getChatMessage\n\n  public exitSocket = () => {\n\n    this.socket.disconnect();\n\n  }//end exit socket\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = \"\";\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    }//end if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }//end handleError\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">GroupChat Sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"sendResetLink()\\\">Send Reset Link</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public email: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public sendResetLink = () => {\n\n    this.appService.sendResetLinkFunction(this.email)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Mail Sent SuccessFully\", \"Success!\");\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 2000);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });\n\n  }//end of sendResetLink \n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">GroupChat Sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <a [routerLink]=\\\"['/forgotPassword']\\\">Forgot Password ?</a>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signInFunction()\\\">Sign in</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//for cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: string;\n  public password: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n\n  public signInFunction(): any {\n    let data: any = {\n      email: this.email,\n      password: this.password\n    }\n\n    if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning\");\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning\");\n    }\n    else {\n      this.appService.signInFunction(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Signed In\", \"Success\");\n            console.log(apiResponse);\n\n            Cookie.set('authToken', apiResponse.data.authToken);\n            Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n            Cookie.set('receiverName', `${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}`);\n            this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails);\n\n            setTimeout(() => {\n              this.router.navigate(['/chat']);\n            }, 2000);\n          }\n          else {\n            this.toastr.error(apiResponse.message);\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some error occured\");\n          });\n    }\n  }//end of signIn function\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Password Reset</h2>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"resetPassword()\\\">Change Password</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public password: string;\n  public confirmPassword: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public userId: string = this._route.snapshot.paramMap.get('userId');\n\n  public data: any = {};\n\n  public resetPassword = () => {\n\n    if (this.matchPassword()) {\n      this.data.userId = this.userId;\n      this.data.password = this.password;\n      this.appService.resetPassword(this.data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Password Reset Succesfull\", \"Success!\");\n            setTimeout(() => {\n              this.router.navigate(['/']);\n            }, 2000);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          });\n    }\n    else {\n      this.toastr.error(\"Password Mismatch\", \"Error!\");\n    }\n  }\n\n  public matchPassword = () => {\n    if (this.password === this.confirmPassword) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }//end matchPassword\n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignIn()\\\">Sign-In</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Sign Up To GroupChat App</h2>\\n\\n    <br>\\n\\n    <span>FirstName: </span>\\n\\n    <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n\\n    <input type=\\\"text\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required autofocus>\\n\\n    <br>\\n\\n    <span>LastName: </span>\\n\\n    <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n\\n    <input type=\\\"text\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n\\n    <br>\\n\\n    <span>Mobile: </span>\\n\\n    <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n\\n    <input type=\\\"number\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Mobile\\\" required>\\n\\n    <br>\\n\\n    <span>Email: </span>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n\\n    <br>\\n\\n    <span>Password: </span>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signupFunction()\\\">Sign Up</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n\n//import for service\nimport { AppService } from '../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: string;\n  public lastName: string;\n  public email: string;\n  public password: string;\n  public mobileNumber: number;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate(['/']);\n  }//end of goToSign function\n\n  public signupFunction(): any {\n\n    if (!this.firstName) {\n      this.toastr.warning(\"First Name is required\", \"Warning!\");\n    }\n    else if (!this.lastName) {\n      this.toastr.warning(\"Last Name is required\", \"Warning!\");\n    }\n    else if (!this.mobileNumber) {\n      this.toastr.warning(\"Mobile Number is required\", \"Warning!\");\n    }\n    else if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    }\n    else {\n\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: this.mobileNumber,\n        email: this.email,\n        password: this.password\n      }\n\n      this.appService.signUpFunction(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Signed Up\", \"!SuccesFull\");\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 2000);//redirecting to signIn page\n\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          });//end calling signUpFunction\n    }\n  }//end signUp function\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n//for routing\nimport { RouterModule, Routes } from '@angular/router';\n//for toast message\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//for using forms\nimport { FormsModule } from '@angular/forms';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'signup', component: SignupComponent },\n      { path: 'forgotPassword', component: ForgotPasswordComponent },\n      { path: 'resetPassword/:userId', component: ResetPasswordComponent }\n    ])\n\n  ],\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}